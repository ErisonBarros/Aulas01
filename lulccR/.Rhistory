c(p1,p2,p3)
p3
p2
p1
clues.tabs
p3 <- rasterVis::levelplot(clues.tabs@maps[[7]][[1:3]], layout=c(3,1), names.attr=c("hello","hello again","goodbye"))
p3
lst <- list(c(1,2,3),c(1,2,3),c(4,5,6))
lst
lst[-3]
ix=3
lst[-ix]
lab="Forest"
paste0("ref t0: ", lab, " (x", 1, ")")
paste0("ref t0: ", lab, " (res x", 1, ")")
clues.tabs@factors
length(clues.tabs@factors)
length(clues.tabs@maps)
names(clues.tabs@maps[[1]])
names(clues.tabs@maps[[2]])
p1
p2
p3
c(list(p1,p2,p3))
do.call("c", list(p1,p2,p3))
do.call("c", list(p1))
q()
n
document()
devtools::document()
plot(clues.tabs)
plot(clues.tabs, category=1)
plot(clues.tabs, category=1, factors=c(2,4,16))
q()
n
devtools::document()
q()
n
devtools::document()
plot(clues.tabs, category=1)
plot(clues.tabs, category=1, factors=4)
plot(clues.tabs, category=1, factors=c(2,4,16))
p1 <- rasterVis::levelplot(clues.tabs@maps[[2]][[1:3]])
p1
p2 <- rasterVis::levelplot(clues.tabs@maps[[3]][[1:3]])
c(p1,p2)
p1
c(p1,p2)
p2
p2
c(wireframe(volcano), contourplot(volcano))
library(lattice)
library(latticeExtra)
c(wireframe(volcano), contourplot(volcano))
c(p1,p2,merge.legends=TRUE)
c(x=(p1,p2))
c(x=list(p1,p2))
p <- c(x=list(p1,p2))
p
print9p)
print(p)
c(plot1=p1,plot2=p2,merge.legends=TRUE)
c(plot1=p1,plot2=p2,merge.legends=TRUE)
c(plot1=p1,plot2=p2)
p3 <- c(p1,p2)
p3
update(p3, strip.custom=list(var.name=c("a","b","c","d","e","f")))
p3
update(p3, strip=strip.custom(var.name=c("a","b","c","d","e","f")))
p3
p3
print(p1,p2,split=c(1,1,1,2))
print(p1,split=c(1,1,1,2))
rasterVis::levelplot(obs, layout=c(3,1))
q()
n
devtools::document()
plot(clues.tabs)
plot(clues.tabs, category=1, factors=2)
plot(clues.tabs, category=1, factors=4)
q()
n
devtools::document()
plot(clues.tabs, category=1, factors=c(2,4,16))
p1 <- rasterVis::levelplot(obs, names.attr=c("a","b","c"))
p2 <- rasterVis::levelplot(obs, names.attr=c("d","e","f"))
plot(p1)
p2
c(p1,p2,x.same=TRUE,y.same=TRUE)
p3 <- c(p1,p2,x.same=TRUE,y.same=TRUE)
print(p3)
update(p3, strip=strip.custom(var.name=c("a","b","c","d","e","f")))
library(lattice)
library(latticeExtra)
p3 <- c(p1,p2,x.same=TRUE,y.same=TRUE)
p3
p3 <- latticeExtra::c(p1,p2,x.same=TRUE,y.same=TRUE)
p3 <- latticeExtra::c.trellis(p1,p2,x.same=TRUE,y.same=TRUE)
p3 <- c.trellis(p1,p2,x.same=TRUE,y.same=TRUE)
showMethods("c")
latticeExtra
p1 <- plot(c(1,2,3))
p2 <- plot(c(1,2,3))
p1
p2 <- plot(c(1,2,3),c(1,2,3))
p2
print(p2)
p1
print(p1)
c(plot(c(1,2,3),c(1,2,3)),plot(c(1,2,3),c(1,2,3)))
?c
class(p3)
p3
names(p3)
names(p3$strip)
p3$strip
names(p3)
p3$par.strip.text
p3$aspect.fill
p3$strip
showMethods("c")
p3
update(p3, main="hello")
names(p3)
p3$strip.default
p3[["strip"]]
p3
update(p3, main="hello")
update(p3, strip=strip.custom(factor.levels=c("a","b","c","d","e","f")))
lst <- list(c("a","b","c"),c("a","b","c"))
lst
c(lst)
unlist(lst)
lst <- list(c("a","b","c"),c("d","e","f"))
unlist(lst)
update(p3, strip=strip.custom(factor.levels=c("a","b","c","d","e","f")))
q()
n
devtools::document()
plot(clues.tabs, category=1, factors=c(2,4,16,32))
plot(clues.tabs, category=1, factors=c(2,4,16,32))q
q()
n
devtools::document()
plot(clues.tabs, category=1, factors=c(2,4,16))
q()
n
devtools::load_all()
plot(clues.tabs, category=1, factors=c(2,4,16))
library(lattice)
plot(clues.tabs, category=1, factors=c(2,4,16))
plot(clues.tabs)
plot(clues.tabs)
saveRDS(clues.tabs, "tabs.rds")
q()
n
devtools::document()
q()
n
devtools::document()
readRDS("tabs.rds")
clues.tabs
clues.tabs <- readRDS("tabs.rds")
plot(clues.tabs, category=1, factors=c(2,4,16))
library(lattice)
plot(clues.tabs, category=1, factors=c(2,4,16))
plot(clues.tabs, category=1)
plot(clues.tabs, category=1, factors=clues.tabs@factors[1:5])
q()
n
devtools::document()
clues.tabs <- readRDS("tabs.rds")
plot(clues.tabs, category=1, factors=c(2,4,16))
strip.custom
q()
n
devtools::document()
clues.tabs <- readRDS("tabs.rds")
plot(clues.tabs, category=1, factors=c(2,4,16))
q()
n
devtools::document()
q()
n
devtools::check(".", args=c("--no-examples"))
q()
n
devtools::check(".", args=c("--no-example"))
q()
n
devtools::check(".", args=c("--no-examples"))
q()
n
devtools::check(".", args="--no-examples")
q()
n
devtools::load_all()
names(pie)
r <- pie[[1]]
r
levels(pie)
ratify(pie)
r <- ratify(r)
levels(r)
slotNames(r)
r@data
r
attributes(r)
slotNames(r)
slotNames(r@data)
r@data@attributes
class(r@data)
isGeneric("predict")
q()
n
devtools::document()
q()
n
devtools::document()
q()
n
devtools::document()
q()
n
devtools::document()
q()
n
devtools::check(".", args="--no-examples")
q()
n
devtools::document()
q()n
q()
n
devtools::check(".", args="--no-examples")
showMethods("predict")
q()
n
devtools::document()
q()
n
devtools::document()
q()
n
devtools::check(".", args="--no-examples")
q()
n
devtools::document()
q()
n
devtools::document()
q()
n
devtools::check(".", args="--no-examples")
q()
n
devtools::document()
q()
n
devtools::check(".", args="--no-examples")
q()
n
devtools::document()
q()
n
devtools::document()
q()
n
devtools::check(".", args="--no-examples")
q()
n
devtools::document()
q()
n
devtools::check(".", args="--no-examples")
q()
n
devtools::document()
q()
n
devtools::check(".", args="--no-examples")
q()
n
devtools::document()
q()
n
devtools::document()
q()
n
devtools::document()
q()
n
devtools::check(".", args="--no-examples")
()
q()
n
devtools::check(".",args="--no-examples")
pie
ef <- ExpVarMaps(pie, pattern="ef")
ef
st <- stack(pie)
slotNames(st)
slotNames(pie[[1]])
st@filename
ls()
data(pie)
ls()
showMethods("resample")
summary(ef)
summary(obs)
class(summary(ef))
q()
n
devtools::document()
q()
n
devtools::document()
q()
n
devtools::document()
q()
n
devtools::check(".", args="--no-examples")
q()
n
obs
input
input
input
nchar(NULL)
q()
n
input
input
input
object<-input
ln
n
ln
w
nchar(ln)
nchar(dmd0)
nchar(dmd1)
pmax
c(nchar(ln),nchar(dmd0),nchar(dmd0))
pmax(c(nchar(ln),nchar(dmd0),nchar(dmd0)))
w
pmax(nchar(ln))
w
input
dim(train.data)
names(train.data)
dim(test.data)
glm.models
showMethods("predict")
df <- predict(glm.models, test.data)
glm.models@models
newdata=test.data
object=glm.models
length(object@models)
length(object)
i=1
mod
class(mod)
inherits(mod, "glm")
out<-list()
out
q()
n
dmd
names(obs)
obs@labels
nb
plot(nb)
clues.model
clues.model@demand
dmd
clues.models@demand
clues.model@demand
dmd
class(dmd)
q()
n
clues.model
ordered.model
clues.model
ordered.model
clues.model
plot(clues.tabs)
plot(clues.tabs, category=1, factors=clues.tabs@factors[1:5])
plot(clues.tabs, category=1, factors=clues.tabs@factors[1:5])
q()
n
clues.tabs
plot(clues.tabs, category=1, factors=clues.tabs@factors[1:5])
q()
n
plot(clues.tabs)
plot(clues.tabs,category=1,factors=clues.tabs@factors[1:5])
clues.tabs
compareAUC(glm.pred)
length(x)
length(hist)
unique(hist)
dmd
cd
dim(allow)
head(allow)
r
nb.allow
dmd
dmd
dmd
apply(dmd,1,sum)
names(train.data)
names(test.data)
sibuyan
sibuyan_maps
sibuyan_data
names(sibuyan)
obs
ef
plot(obs)
plot(ef)
ef
sibuyan$intermediate
forest.formula
coconut.formula
names(coconut.formula
)
names(as.character(coconut.formula))
(as.character(coconut.formula))
names(train.data)
names(train.data)
names(train.data)
glm.models
head(suitability.maps)
class(points)
class(suitability.maps)
r
ef[[1]]
class(ef)
w1
w2
w3
plot(nb)
names(nb)
nb
nb@categories
nb@labels
rasterVis::levelplot(nb)
plot(obs)
ef
runif(1)
dmd
apply(dmd, 1, sum)
ncell
dmd
length(dmd)
dmd
runif(75)
dmd
dmd
subset(obs, "forest")
names(obs)
class(obs)
obs
names(ef)
ef
summary(ef)
summary(obs)
isGeneric(subset)
isGeneric("subset")
q()
n
devtools::document()
q()
n
devtools::check(".", args="--no-examples")
q()
n
devtools::document()
q()
n
devtools::check(".", args="--no-examples")
q()
n
devtools::check(".")
q()
n
devtools::check(".")
q()
n
devtools::check(".")
q(
)
n
devtools::check(".")
q()
n
