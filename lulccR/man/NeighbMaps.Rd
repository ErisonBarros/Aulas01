% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{NeighbMaps}
\alias{NeighbMaps}
\alias{NeighbMaps,RasterLayer,ANY,NeighbMaps-method}
\alias{NeighbMaps,RasterLayer,list,ANY-method}
\alias{NeighbMaps,RasterLayer,matrix,ANY-method}
\title{Create a NeighbMaps object}
\usage{
NeighbMaps(x, weights, neighb, ...)

\S4method{NeighbMaps}{RasterLayer,list,ANY}(x, weights, neighb, categories,
  fun = mean, ...)

\S4method{NeighbMaps}{RasterLayer,matrix,ANY}(x, weights, neighb, categories,
  fun = mean, ...)

\S4method{NeighbMaps}{RasterLayer,ANY,NeighbMaps}(x, weights, neighb)
}
\arguments{
\item{x}{RasterLayer containing categorical data}

\item{weights}{list containing a matrix of weights (the \code{w} argument in
\code{focal}) for each land use category or a numeric vector specifying the
 size of each weights matrix. In the latter case only square matrices are
 possible and all weights are given a value of 1. The order of list or
 vector elements should correspond to the order of land use categories in
 \code{categories}}

\item{neighb}{NeighbMaps object. Only used if \code{categories} and
\code{weights} are not provided. This option can be useful when existing
NeighbMaps objects need to be updated because a new land use map is
available, such as during the allocation procedure.}

\item{categories}{numeric vector containing land use categories for which
neighbourhood values should be calculated}

\item{fun}{function. Input argument to \code{focal}. Default is \code{mean}}

\item{\dots}{additional arguments to \code{raster::\link[raster]{focal}}}
}
\value{
A NeighbMaps object.
}
\description{
Methods to calculate neighbourhood values for cells in raster maps using
\code{raster::\link[raster]{focal}}. By default the fraction of non-NA cells
within the moving window (i.e. the size of the weights matrix) devoted to each
land use category is calculated. This behaviour can be changed by altering the
weights matrix or providing an alternative function. The resulting object can
be used as the basis of neighbourhood decision rules.
}
\examples{
## observed data
obs <- ObsLulcMaps(x=pie,
                    pattern="lu",
                    categories=c(1,2,3),
                    labels=c("forest","built","other"),
                    t=c(0,6,14))

## create a NeighbMaps object for 1985 land use map
nb1 <- NeighbMaps(x=obs[[1]],
                  categories=c(1,2,3), # all land use categories
                  weights=c(3,3,3))           # 3*3 neighbourhood

w1 <- matrix(data=c(1,1,1,
                    1,1,1,
                    1,1,1), nrow=3, ncol=3, byrow=TRUE)

w2 <- matrix(data=c(1,1,1,
                    1,1,1,
                    1,1,1), nrow=3, ncol=3, byrow=TRUE)

w3 <- matrix(data=c(1,1,1,
                    1,1,1,
                    1,1,1), nrow=3, ncol=3, byrow=TRUE)

nb2 <- NeighbMaps(x=obs[[1]],
                  categories=c(1,2,3),
                  weights=list(w1,w2,w3))

## update nb2 for 1991
nb2 <- NeighbMaps(x=obs[[2]],
                  neighb=nb2)

## plot neighbourhood map for forest
plot(nb2@maps[[1]])
}
\seealso{
\code{\link{NeighbMaps-class}}, \code{\link{allowNeighb}},
\code{raster::\link[raster]{focal}}
}

