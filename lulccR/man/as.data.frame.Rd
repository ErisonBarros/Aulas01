% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{as.data.frame.ModelInput}
\alias{as.data.frame,ExpVarMaps-method}
\alias{as.data.frame,ModelInput-method}
\alias{as.data.frame.ExpVarMaps}
\alias{as.data.frame.ModelInput}
\title{Coerce objects to data.frame}
\usage{
\method{as.data.frame}{ModelInput}(x, row.names = NULL, optional = FALSE,
  cells, t = 0, efonly = FALSE, ...)

\method{as.data.frame}{ExpVarMaps}(x, row.names = NULL, optional = FALSE,
  cells, t = 0, ...)

\S4method{as.data.frame}{ExpVarMaps}(x, row.names = NULL, optional = FALSE,
  cells, t = 0, ...)

\S4method{as.data.frame}{ModelInput}(x, row.names = NULL, optional = FALSE,
  cells, t = 0, efonly = FALSE, ...)
}
\arguments{
\item{x}{an ExpVarMaps or ModelInput object}

\item{row.names}{NULL or a character vector giving the row.names for the
data.frame. Missing values are not allowed}

\item{optional}{logical. If TRUE, setting row names and converting column
names (to syntactic names: see make.names) is optional}

\item{cells}{index of cells to be extracted, which may be a
\code{SpatialPoints*} object or a numeric vector representing cell numbers
(see \code{raster::\link[raster]{extract}})}

\item{t}{numeric indicating the time under consideration. Only
relevant if 'x' contains dynamic explanatory variables}

\item{efonly}{Should the data.frame contain the response variable (i.e.
observed land use) as well as explanatory variables, or just explanatory
variables? Only relevant if 'x' is a \code{ModelInput} object}

\item{\dots}{additional arguments (none)}
}
\value{
A data.frame.
}
\description{
This function extracts data from all raster objects in a
\code{\link{ExpVarMaps}} object for a specified timestep (if dynamic
variables are present).
}
\examples{
\dontrun{

## Plum Island Ecosystems

## observed maps
obs <- ObsLulcMaps(x=pie,
                   pattern="lu",
                   categories=c(1,2,3),
                   labels=c("Forest","Built","Other"),
                   t=c(0,6,14))

## explanatory variables
ef <- ExpVarMaps(x=pie, pattern="ef")

## prepare model input
input <- ModelInput(obs=obs,
                    ef=ef,
                    time=0:14)

## separate data into training and testing partitions
part <- partition(x=obs[[1]], size=0.1, spatial=TRUE)
train.data <- as.data.frame(x=input, cells=part[["train"]], t=0)
test.data  <- as.data.frame(x=input, cells=part[["test"]], t=0,  efonly=TRUE)

names(train.data)
names(test.data)

}
}
\seealso{
\code{\link[base]{as.data.frame}}, \code{\link{ExpVarMaps}},
\code{link{ModelInput}}, \code{\link{partition}}
}

